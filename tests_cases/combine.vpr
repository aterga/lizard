
field ref: Ref
field val: Int
predicate pair(x: Ref) {
    acc(x.ref) && acc(x.val)
}

method test(x: Ref)
    requires acc(pair(x))
    requires unfolding acc(pair(x)) in x.ref == null ==> x.val == 3
{
    unfold acc(pair(x))
    assert x.val == 3 // Verification fails
}

method example(s1: Set[Ref], s2: Set[Ref])
{
if (|s1| > 0) {
// Symbolic state (1)
if (|s1 union s2| > 0) {
    assert true
// Symbolic state (2)
}
}
}