field next: Ref 

method notARing(nodes: Set[Ref])
	requires forall r: Ref :: r in nodes ==> acc(r.next) 
	requires forall r: Ref :: r in nodes ==>
				r.next != null && r.next in nodes && r.next != r
	requires |nodes| == 4
{
	var n: Ref;
	assume n in nodes

	var hasPred: Bool := (exists r: Ref ::
							r in nodes && r.next == n)
	assert hasPred
}