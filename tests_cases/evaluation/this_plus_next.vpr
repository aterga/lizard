

field next: Ref
field val: Int
method thisPlusNext(nodes: Set[Ref], n: Ref) returns (sum: Int)
	requires forall r: Ref :: r in nodes ==> acc(r.next) && acc(r.val)
	requires forall r: Ref :: r in nodes && r.next != null ==> r.next in nodes
	// requires forall r: Ref :: r in nodes && r.next != null ==> r.next != r
	requires n in nodes
	requires |nodes| == 4
{
	sum := n.val

	exhale acc(n.val)
	if (n.next != null) {
		sum := sum + n.next.val
		exhale acc(n.next.val)
	}
}